/**
 * The application configuration.
 * @author A true hipster
 */
application {
    config {
        baseName emulator
        applicationType monolith
        authenticationType jwt
        buildTool gradle
        clientFramework react
        databaseType sql
        devDatabaseType h2Disk
        prodDatabaseType postgresql
        packageName com.bludash.emulator
        skipUserManagement false
    }
    entities *
}

entity BluForm {
    key UUID
    label String
    category String
    productKey String
    pollingInterval Long
    modified Long
}
entity BluField {
    key UUID
    label String
    dataType BluFieldType
    dataFormat String
    values String
}
entity BluFormData {
    retrieved Long
}
entity BluFieldStringValue {
    value String
}
entity BluFieldNumberValue {
    value Long
}
entity BluFieldCurrencyValue {
    value Long
    currency String
}
relationship OneToOne {
    BluFieldStringValue to BluField
    BluFieldCurrencyValue to BluField
    BluFieldNumberValue to BluField
}
relationship OneToMany {
    BluForm to BluField
    BluForm to BluFormData
    BluFormData to BluFieldStringValue
    BluFormData to BluFieldCurrencyValue 
    BluFormData to BluFieldNumberValue
}
enum BluFieldType {
    ENUM, NUMBER, PERCENT, TEXT, DATETIME, CURRENCY, LATLONG
}
/**
 * The Dataset entity.
 * @author A true hipster
 */
entity DataSet {
    key UUID
    label String
    landingPage String
}
entity Query {
    key UUID
    label String
}
entity DataModel {
    key UUID
    label String
    dataFormat String
    maxLength Integer
    precision Integer
    values Status
}
entity Record {
    recordId Integer
}
entity QueryData {
    value String
}
enum Status {
    WITHDRAWN, CARRIER_REJECTED, TENDER_BYPASSED, SPOTMARKET, OLD, EXPIRED, PENDING, LOAD_REMOVED, VOIDED, COMPLETED, ACCEPTED, SHIPPER_REJECTED, CANCELED, TENDERED, NO_OFFERS, REMOVED
}
/**
 * One to many relationship.
 */
relationship OneToMany {
    DataSet to DataModel
    Record to QueryData
    Query to Record
}
/**
 * One to one relationship.
 */
relationship OneToOne {
    QueryData to DataModel
}
